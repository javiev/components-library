name: 🎨 publish @javiev/components-library to GitHub Packages

on:
  pull_request:
    types: [synchronize, opened, reopened]
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: 🛠️ Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 🔄 Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          registry-url: 'https://npm.pkg.github.com'
          scope: 'javiev'

      - name: 🧪 Install dependencies
        run: npm ci

      - name: 💾 Save Main Version
        id: save_main_version
        run: |
          git checkout main
          MAIN_VERSION=$(jq -r .version package.json)
          echo "Main Version: $MAIN_VERSION"
          echo "MAIN_VERSION=$MAIN_VERSION" >> $GITHUB_ENV

      - name: 💾 Save PR Version
        id: save_pr_version
        run: |
          git checkout ${{ github.head_ref }}
          PR_VERSION=$(jq -r .version package.json)
          echo "PR Version: $PR_VERSION"
          echo "PR_VERSION=$PR_VERSION" >> $GITHUB_ENV

      - name: 🔄 Compare Versions
        id: compare_versions
        run: |
          echo "Main Version: ${{ env.MAIN_VERSION }}"
          echo "PR Version: ${{ env.PR_VERSION }}"
          if [[ "${{ env.PR_VERSION }}" != "${{ env.MAIN_VERSION }}" ]]; then
            echo "VERSION_CHANGED=true" >> $GITHUB_ENV
          else
            echo "VERSION_CHANGED=false" >> $GITHUB_ENV
          fi

      - name: 🌀 Run Rollup
        if: ${{ env.VERSION_CHANGED == 'true' }}
        run: npm run rollup

      - name: 🚀 Publish
        if: ${{ env.VERSION_CHANGED == 'true' }}
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
